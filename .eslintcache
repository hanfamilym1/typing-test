[{"C:\\Users\\Michael Han\\desktop\\coding\\revamping-old-projects\\typing-test\\src\\index.js":"1","C:\\Users\\Michael Han\\desktop\\coding\\revamping-old-projects\\typing-test\\src\\reportWebVitals.js":"2","C:\\Users\\Michael Han\\desktop\\coding\\revamping-old-projects\\typing-test\\src\\App.js":"3","C:\\Users\\Michael Han\\desktop\\coding\\revamping-old-projects\\typing-test\\src\\ogWords.js":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"6"},{"size":2633,"mtime":1614822968573,"results":"8","hashOfConfig":"6"},{"size":3489,"mtime":1612045512642,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"dnakj0",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"C:\\Users\\Michael Han\\desktop\\coding\\revamping-old-projects\\typing-test\\src\\index.js",[],["22","23"],"C:\\Users\\Michael Han\\desktop\\coding\\revamping-old-projects\\typing-test\\src\\reportWebVitals.js",[],"C:\\Users\\Michael Han\\desktop\\coding\\revamping-old-projects\\typing-test\\src\\App.js",["24"],"\nimport React, {useState, useEffect} from 'react';\nimport ogWords from './ogWords'\nimport './App.css';\n\n\nfunction App() {\n  // let firstRandomNum = Math.floor(Math.random() * ogWords.length)\n  // let firstWord = ogWords[firstRandomNum]\n  const [count, setCount] = useState(()=> 0)\n  const [usedWords, setUsedWords] = useState([])\n  const [word, setWord] = useState('')\n  const [typedWord, setTypedWord] = useState('')\n  const [finished, setFinished] = useState(false)\n  const [initiatedGame, setInitiatedGame] = useState(false)\n  const [timer, setTimer] = useState(60)\n\n  const chooseNewWord = ()=> {\n    // newWords are words filtered with the usedWords in order to take them out\n    let newWords = ogWords.filter(word => !usedWords.includes(word))\n    let randomNum = Math.floor(Math.random() * newWords.length)\n    // chosen word after this;\n    let newWord = newWords[randomNum]\n    if(newWords.length === 0){\n      setFinished(true)\n    }\n    setUsedWords(usedWords => [...usedWords, newWord])\n    wordsPerMin() \n    return newWord\n  }\n\n  const wordsPerMin = () => {\n    console.log(usedWords)\n    setCount(usedWords.length)\n  }\n\n  // play Game needs to have the logic between the content.\n  var countdown;\n  const playGame = () => {\n    let newWord = chooseNewWord()\n    setWord(newWord)\n    setInitiatedGame(true)\n    setFinished(false)\n    setTimer(60)\n  }\n\n  useEffect(()=> {\n      countdown = setInterval(()=> {\n         console.log(timer)\n         if(timer === 0 ){\n           clearInterval(countdown)\n         } else {\n           let newTimer = timer-1\n           setTimer(newTimer)\n         }\n      },1000)\n  }, [timer])\n\n  const handleChange = (event) => {\n    if(usedWords.length === 0) {\n      setInitiatedGame(true)\n    }\n    setTypedWord(event.target.value)\n    if(typedWord === word){\n      let newWord = chooseNewWord()\n      setWord(newWord)\n      setTypedWord('')\n    } \n  }\n\n  const tryAgain = () => {\n    setInitiatedGame(false)\n    setTimer(60)\n    setFinished(false)\n  }\n\n\n\n  return (\n    <div className=\"App\">\n      {!initiatedGame ?\n        <>\n          <h1>Start Game</h1>\n          <button onClick={playGame} >Start</button>\n        </>\n        :\n        [\n          finished ? \n            <>\n            <h1>COMPLETED</h1>\n            <h3>{count} WPM</h3>\n            <button onClick={tryAgain}>Try Again</button>\n            </>\n        :  \n          <>        \n            <h1>{word}</h1>\n            <input type=\"text\" value={typedWord} onChange={handleChange}/>\n            <h3>{count}</h3>\n            <h4>{timer}</h4>\n          </>\n        ]      \n      }\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Michael Han\\desktop\\coding\\revamping-old-projects\\typing-test\\src\\ogWords.js",["25"],"const ogWords = [\"a\", \"abandon\", \"ability\", \"able\", \"abortion\", \"about\", \"above\", \"abroad\", \"absence\", \"absolute\", \"absolutely\", \"absorb\", \"abuse\", \"academic\", \"accept\", \"access\", \"accident\", \"accompany\", \"accomplish\", \"according\",\"account\", \"accurate\", \"accuse\", \"achieve\", \"achievement\", \"acid\", \"acknowledge\", \"acquire\", \"across\",\"act\",\"action\",\"active\",\"activist\",\"activity\",\"actor\",\"actress\",\"actual\",\"actually\",\"ad\",\"adapt\",\"add\",\"addition\",\"additional\",\"address\",\"adequate\",\"adjust\",\"adjustment\",\"administration\",\"administrator\",\"admire\",\"admission\",\"admit\",\"adolescent\",\"adopt\",\"adult\",\"advance\",\"advanced\",\"advantage\",\"adventure\",\"advertising\",\"advice\",\"advise\",\"adviser\",\"advocate\",\"affair\",\"affect\",\"afford\",\"afraid\",\"African\",\"African-American\",\"after\",\"afternoon\",\"again\",\"against\",\"age\",\"agency\",\"agenda\",\"agent\",\"aggressive\",\"ago\",\"agree\",\"agreement\",\"agricultural\",\"ah\",\"ahead\",\"aid\",\"aide\",\"AIDS\",\"aim\",\"air\",\"aircraft\",\"airline\",\"airport\",\"album\",\"alcohol\",\"alive\",\"all\",\"alliance\",\"allow\",\"ally\",\"almost\",\"alone\",\"along\",\"already\",\"also\",\"alter\",\"alternative\",\"although\",\"always\",\"AM\",\"amazing\",\"American\",\"among\",\"amount\",\"analysis\",\"analyst\",\"analyze\",\"ancient\",\"and\",\"anger\",\"angle\",\"angry\",\"animal\",\"anniversary\",\"announce\",\"annual\",\"another\",\"answer\",\"anticipate\",\"anxiety\",\"any\",\"anybody\",\"anymore\",\"anyone\",\"anything\",\"anyway\",\"anywhere\",\"apart\",\"apartment\",\"apparent\",\"apparently\",\"appeal\",\"appear\",\"appearance\",,\"apple\",\"application\",\"apply\",\"appoint\",\"appointment\",\"appreciate\",\"approach\",\"appropriate\",\"approval\",\"approve\",\"approximately\",\"Arab\",\"architect\",\"area\",\"argue\",\"argument\",\"arise\",\"arm\",\"armed\",\"army\",\"around\",\"arrange\",\"arrangement\",\"arrest\",\"arrival\",\"arrive\",\"art\",\"article\",\"artist\",\"artistic\",\"as\",\"Asian\",\"aside\",\"ask\",\"asleep\",\"aspect\",\"assault\",\"assert\",\"assess\",\"assessment\",\"asset\",\"assign\",\"assignment\",\"assist\",\"assistance\",\"assistant\",\"associate\",\"association\",\"assume\",\"assumption\",\"assure\",\"at\",\"athlete\",\"athletic\",\"atmosphere\",\"attach\",\"attack\",\"attempt\",\"attend\",\"attention\",\"attitude\",\"attorney\",\"attract\",\"attractive\",\"attribute\",\"audience\",\"author\",\"authority\",\"auto\",\"available\",\"average\",\"avoid\",\"award\",\"aware\",\"awareness\",\"away\",\"awful\",\"baby\",\"back\",\"background\",\"bad\",\"badly\",\"bag\",\"bake\",\"balance\",\"ball\",\"ban\",\"band\",\"bank\",\"bar\",\"barely\",\"barrel\",\"barrier\",\"base\",\"baseball\",\"basic\",\"basically\",\"basis\",\"basket\",\"basketball\",\"bathroom\",\"battery\",\"battle\",\"be\",\"beach\",\"bean\",\"bear\",\"beat\",\"beautiful\",\"beauty\",\"because\",\"become\",\"bed\",\"bedroom\",\"beer\",\"before\",\"begin\",\"beginning\",\"behavior\",\"behind\",\"being\",\"belief\",\"believe\",'bell','belong','below','belt','bench','bend','beneath','benefit','beside','besides','best','bet','better','between','beyond','Bible','big','bike','bill','billion','bind','biological','bird','birth','birthday','bit','bite','black','blade','blame','blanket','blind','block','blood','blow','blue','board','boat','body','bomb','bombing','bond','bone','book','boom','boot','border','born','borrow','boss','both','bother','bottle','bottom','boundary','bowl','box','boy','boyfriend','brain','branch','brand','bread','break','breakfast','breast','breath','breathe','brick','bridge','brief','briefly','bright','brilliant','bring','British','broad','broken','brother','brown','brush','buck','budget','build','building','bullet','bunch','burden','burn','bury','bus','business','busy','but','butter','button','buy','buyer','by','cabin','cabinet','cable','cake','calculate'];\r\n\r\nexport default ogWords",["26","27"],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":48,"column":19,"nodeType":"34","endLine":56,"endColumn":14},{"ruleId":"35","severity":1,"message":"36","line":1,"column":17,"nodeType":"37","messageId":"38","endLine":1,"endColumn":3463},{"ruleId":"28","replacedBy":"39"},{"ruleId":"30","replacedBy":"40"},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"react-hooks/exhaustive-deps","Assignments to the 'countdown' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","no-sparse-arrays","Unexpected comma in middle of array.","ArrayExpression","unexpectedSparseArray",["41"],["42"],"no-global-assign","no-unsafe-negation"]